/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        hm: hm {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <50>;
            flavor = "balanced";
        };

        capswordminus: capswordminus {
            compatible = "zmk,behavior-caps-word";
            label = "CAPSWORDMINUS";
            #binding-cells = <0>;
            continue-list = <MINUS UNDERSCORE>;
        };

        hm_layer: hm_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HM_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <300>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <50>;
        };
    };

    combos {
        compatible = "zmk,combos";

        cwcombo {
            bindings = <&caps_word>;
            key-positions = <16 19>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | LAYER 1 | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
            //                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |

            bindings = <
&lt 3 TAB  &kp Q        &kp W       &kp E       &kp R        &kp T                                                                   &kp Y          &kp U        &kp I           &kp O       &kp P                &kp BSLH
&kp CAPS   &hm LCTRL A  &hm LALT S  &hm LGUI D  &hm RSHFT F  &hm_layer 4 G                                                           &hm_layer 4 H  &hm RSHFT J  &hm LEFT_GUI K  &hm RALT L  &hm RCTRL SEMICOLON  &kp SQT
&kp LSHFT  &kp Z        &kp X       &kp C       &kp V        &kp B          &kp LSHFT  &kp LSHFT    &mo 1        &kp LSHFT           &kp N          &kp M        &kp COMMA       &kp DOT     &kp FSLH             &kp TILDE
                                    &mo 6       &kp CAPS     &kp ESCAPE     &kp BSPC   &lt 5 SPACE  &lt 5 SPACE  &mt CAPSLOCK ENTER  &lt 3 TAB      &kp BSPC     &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |      |BT_CLR|BTSEL0|BTSEL1|BTSEL2|                                         |      |      |      |      |      |      |
            // |       |      |      |BTSEL3|BTSEL4|      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |      |
            //                       |      |      |      |      |      |      |      |      |      |      |      |      |

            bindings = <
&kp TAB   &kp LS(EXCL)        &kp LS(AT)         &kp LS(POUND)      &kp LS(DLLR)          &kp LS(PRCNT)                                                  &kp CARET          &kp LS(AMPS)    &kp LS(STAR)     &kp MINUS    &kp EQUAL     &kp GRAVE
&kp ESC   &hm LCTRL NUMBER_1  &hm LALT NUMBER_2  &hm LGUI NUMBER_3  &hm RSHFT N4          &kp N5                                                         &kp N6             &hm RSHFT N7    &hm LGUI N8      &hm RALT N9  &hm RCTRL N0  &kp SQT
&kp CAPS  &kp N1              &kp N2             &kp N3             &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp F7      &kp F8     &kp F9  &kp F10  &kp DOUBLE_QUOTES  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LBKT     &kp RBKT      &kp DOUBLE_QUOTES
                                                 &trans             &trans                &trans                 &kp DELETE  &kp SPACE  &trans  &trans   &trans             &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
            label = "lower";
        };

        nav {
            bindings = <
&trans            &kp RG(RS(Q))  &kp RG(E)  &kp RG(E)        &kp RG(R)  &trans                                           &kp LC(LA(LG(LS(N1))))    &kp LC(LA(LG(LS(N2))))    &kp LC(LA(LG(LS(N3))))  &kp LS(LC(LA(LG(N4))))     &kp LC(LA(LG(LS(N5))))  &kp LS(LC(LA(LG(N6))))
&kp LS(LC(LALT))  &kp LC(LSHFT)  &kp RG(S)  &kp RC(TAB)      &kp RG(F)  &kp RG(TAB)                                      &kp LC(LA(LG(LS(H))))     &kp LC(LA(LG(LS(J))))     &kp LC(LA(LG(LS(K))))   &kp LC(LA(LG(LS(L))))      &kp LC(LSHFT)           &kp LCTRL
&trans            &trans         &trans     &kp RC(RS(TAB))  &trans     &kp RG(RS(TAB))  &trans  &trans  &trans  &trans  &kp LC(LA(LG(LS(LEFT))))  &kp LC(LA(LG(LS(DOWN))))  &kp LC(LA(LG(LS(UP))))  &kp LC(LA(LG(LS(RIGHT))))  &trans                  &kp RSHFT
                                            &trans           &trans     &trans           &trans  &trans  &trans  &trans  &trans                    &trans                    &trans
            >;

            label = "nav";
        };

        upper {
            bindings = <
&kp F1          &kp F2           &kp F3            &kp F4             &kp F5                &kp F6                                                  &kp F7          &kp F8        &kp F9        &kp F10    &kp F11    &kp F12
&kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                                   &kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN      &kp RIGHT  &trans     &trans
&kp RSHFT       &kp LCTRL        &kp LALT          &kp LEFT_GUI       &trans                &capswordminus         &trans   &trans  &trans  &trans  &trans          &trans        &kp LEFT_GUI  &kp RALT   &kp RCTRL  &kp RSHFT
                                                   &trans             &trans                &trans                 &kp DEL  &trans  &trans  &trans  &trans          &trans        &trans
            >;

            label = "upper";
        };

        layer_4 {
            label = "upper";
            bindings = <
&trans          &trans           &trans            &kp TILDE          &trans                &trans                                                  &trans          &trans        &trans        &trans     &trans     &trans
&kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                                   &kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN      &kp RIGHT  &trans     &trans
&kp RSHFT       &kp LCTRL        &kp LALT          &kp LEFT_GUI       &trans                &capswordminus         &trans   &trans  &trans  &trans  &trans          &trans        &kp LEFT_GUI  &kp RALT   &kp RCTRL  &kp RSHFT
                                                   &trans             &trans                &trans                 &kp DEL  &trans  &trans  &trans  &trans          &trans        &trans
            >;
        };

        layer_5 {
            label = "lower_new";
            bindings = <
&kp TAB  &kp UNDERSCORE          &kp MINUS       &kp ASTERISK      &kp AMPERSAND           &kp LBKT                                                          &kp RBKT               &kp N7              &kp N8            &kp N9             &kp PLUS           &kp GRAVE
&trans   &hm LEFT_CONTROL EQUAL  &hm LALT CARET  &hm LCMD PERCENT  &hm RIGHT_SHIFT DOLLAR  &kp LEFT_PARENTHESIS                                              &kp RIGHT_PARENTHESIS  &hm RSHFT NUMBER_4  &hm RIGHT_GUI N5  &hm RALT NUMBER_6  &hm RCTRL N0       &kp SQT
&kp N0   &kp DOUBLE_QUOTES       &kp HASH        &kp AT_SIGN       &kp EXCL                &kp LEFT_BRACE        &kp F7      &kp F8     &kp F9     &kp F10   &kp RIGHT_BRACE        &kp N1              &kp N2            &kp N3             &kp DOUBLE_QUOTES  &kp N0
                                                 &trans            &trans                  &kp CAPS              &kp DELETE  &kp SPACE  &kp SPACE  &kp CAPS  &trans                 &trans              &trans
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        control {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans      &trans        &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans      &trans        &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &bt BT_NXT  &out OUT_TOG  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans      &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        double {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
